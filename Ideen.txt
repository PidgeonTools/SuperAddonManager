1.: Get Blender Addons Paths.
2.: CHECK FOR SuperAddonManager Update!
3.: Iterate through all folders and look for "endpoint_url" in bl_info
4.: Read bl_info, make a request to endpoint_url, compare the version numbers.
5.: Download and install all Auto-Download Addons and display the download URL's for non Auto-Download Addons

Maybe save backup copies (of the addons) for (a) downgrade option(s)

Manual Download: Offer the possibility of updating an addon from a downloaded ZIP file.

All addons: Add option to update an addon from file, even if it doesn't support Super Addon Manager

Download Page: Add Page that says "Thank you for your donation" (Component on the thanks page):
Social Media Description: "I've just donated to Super Addon Manager. If you want to support the project too, please donate!"

Schema Validation: Try to use a schema validator.

Update self: Disable automatic updates for really old Versions!

Update security: Verify checksum to make sure that the file is not malicious using the following system:
2 RSA Public Keys: Store them inside the SAM endpoint, get the public keys when checking for SAM updates
and verify the SHA256() signatures of the files which have been signed with a private key. Stop updating
if the checksum of the downloaded file and the verified checksum don't match.

Verified checksums can be acquired by donating.
Level 1: Simple VT Scan of the ZIP file (cheaper, less secure)
Level 2: VT Scan + Source Code Analysis

Super Addon Manager error handling: When addon transitions from no SAM Support to SAM Support,  many people might have the old, unsupported version installed. Giving the people to enter an endpoint url to temporarily check for updates from. <=> Add the option to update any addon from a downloaded file.

Pass amount via URL:
https://github.com/opencollective/opencollective-frontend/blob/34ddb6dc91602110db5847083443b69bd286afae/pages/contribution-flow.js#L58

Background check: Try to avoid blocking the interface.

When checking in preferences: Disabling/uninstalling an addon doesn't affect sys.modules -> Maybe still check for each addon again, whether it's enabled or not.

Request Support tool: Automatically append URL parameters for github, gitlab, ...
&labels=bug,enhancement,feature request,updater,sam
&template=bug_report.md,feature_request.md
&title=[Super Addon Manager] Whatever
=> Not worth the effort

Setting to let users decide, whether they want to see the error codes (disabled by default):
Read these values from the preferences:
bpy.context.preferences.view.show_tooltips_python
bpy.context.preferences.view.show_developer_ui